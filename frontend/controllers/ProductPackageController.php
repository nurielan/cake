<?php

namespace frontend\controllers;

use yii\web\Controller;
use common\models\ProductPackage;
use Yii;
use yii\filters\AccessControl;
use common\models\PpOrderList;
use common\models\PpOrderItem;
use common\models\PpOrderConfirm;
use common\models\Bank;
use frontend\models\OrderConfirmForm;

class ProductPackageController extends Controller
{
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        //'roles' => ['@'],
                    ],
                ],
            ],
        ];
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $this->layout = 'main-0';
    }

    public function actionIndex()
    {
        $cartPp = Yii::$app->cartPp->getPositions();
        $userAddress = Yii::$app->user->identity->userAddress;
        $orderList = PpOrderList::find()->where(['user_no' => Yii::$app->user->identity->no])->orderBy(['status' => 'ASC', 'created_at' => 'DESC'])->all();

        return $this->render('index', ['cartPp' => $cartPp, 'userAddress' => $userAddress, 'orderList' => $orderList]);
    }

    public function actionRemove($no)
    {
        $model = ProductPackage::findOne(['no' => $no]);
        $image1 = $model->image1;

        if ($model->image1) {
            $model->removeImage($image1);
        }

        $model->delete();

        return $this->redirect(['product-package/index'], 301);
    }

    public function actionOrderItem($order_list_no)
    {
        $order_list_no = str_replace('-', '/', $order_list_no);
        $data['orderList'] = PpOrderList::findOne(['no' => $order_list_no]);
        $data['orderItem'] = PpOrderItem::find()->joinWith('orderList')->where(['pp_order_list_no' => $order_list_no])->all();
        $data['userAddress'] = Yii::$app->user->identity->userAddress;

        return $this->render('order-item', $data);
    }

    public function actionOrderConfirm($order_list_no)
    {
        $order_list_no = str_replace('-', '/', $order_list_no);
        $orderConfirm = PpOrderConfirm::find()->joinWith('orderList')->where(['pp_order_list.no' => $order_list_no])->one();
        $model = new OrderConfirmForm;
        $model->order_list_no = $orderConfirm->orderList->no;
        $model->via = $orderConfirm->via;
        //$model->amount = number_format($orderConfirm->orderList->price);
        $model->bank = $orderConfirm->bank;
        $model->account_name = $orderConfirm->account_name;
        $model->account_number = $orderConfirm->account_number;
        $data['model'] = $model;
        $data['orderConfirm'] = $orderConfirm;

        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            $orderConfirm->amount = $model->amount;
            $orderConfirm->account_name = $model->account_name;
            $orderConfirm->account_number = $model->account_number;
            $orderConfirm->status = 1;
            $orderConfirm->update(false);

            Yii::$app->session->setFlash('order-confirm', Yii::t('common', 'Saved'));

            return $this->redirect(['product-package/index']);
        }

        return $this->render('order-confirm', $data);
    }

    public function actionPrint($id)
    {
        $no = str_replace('-', '/', $id);
        $model = PpOrderList::findOne(['no' => $no]);
        $bank = Bank::findOne($model->orderConfirm->bank_id);

        return $this->renderPartial('invoice', ['model' => $model, 'bank' => $bank]);
        //print_r($model);
    }
}